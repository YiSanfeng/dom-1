{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n    create(string){\r\n        const container = document.createElement('template');\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nexSibling);\r\n    },\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    },\r\n    append(parent,node){\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node,parent){\r\n        dom.before(node,parent)\r\n        dom.append(parent,node)\r\n    },\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node){\r\n        const array = []\r\n        let x = node.firstChild\r\n        while(x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n            return array\r\n        },\r\n        attr(node,name,value){\r\n            if(arguments.length === 3){\r\n            node.setAttribute(name,value)\r\n            }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n            }\r\n        },\r\n        text(node,string){\r\n            if(arguments.length === 2){\r\n                if('innerText in node'){\r\n                    node.innerText = string\r\n            }else{\r\n                node.textContent = string\r\n            }\r\n            }else if(arguments.length === 1){\r\n                if('innerText in node'){\r\n                    return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }\r\n            }\r\n        },\r\n        html(node,string){\r\n            if(arguments.length === 2){\r\n                node.innerHTML = string\r\n            }else if(arguments.length === 1){\r\n                return node.innerHTML\r\n            }\r\n        },\r\n        style(node,name,value){\r\n            if(arguments.length === 3){\r\n                // dom.style(div,'color','red')\r\n                node.style[name] = value\r\n            }else if(arguments.length === 2){\r\n                if(typeof name === 'string'){\r\n                    // dom.style(div,'color')\r\n                    return node.style[name]\r\n                }else if(name instanceof Object){\r\n                    // dom.style(div,{color:'red'})\r\n                    const Object = name \r\n                    for(let key in name){\r\n                        node.style[key] = Object[key]\r\n                    }\r\n                }\r\n            }\r\n        },\r\nclass:{\r\n    add(node,className){\r\n        node.classList.add(className)\r\n    },\r\n    remove(node,className){\r\n        node.classList.remove(className)\r\n    },\r\n    has(node,className){\r\n        return node.classList.contains(className)\r\n    }\r\n},\r\non(node,eventName,fn){\r\n    node.addEventListener(eventName,fn)\r\n},\r\noff(node,eventName,fn){\r\n    node.removeEventListener(eventName,fn)\r\n},\r\nfind(selector,scope){\r\n    return (scope || document).querySelectorAll(selector)\r\n},\r\nparent(node){\r\n    return node.parentNode\r\n},\r\n    children(node){\r\n        return node.children\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(n=>n!==node)\r\n    },\r\n    next(node){\r\n        let x= node.nexSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.nexSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x= node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n        fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i=0;i<list.length;i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};\r\n    "],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}